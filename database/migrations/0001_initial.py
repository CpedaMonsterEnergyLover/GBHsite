# Generated by Django 3.2.5 on 2021-07-22 22:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(default='no description', max_length=500)),
                ('rarity', models.IntegerField(choices=[(1, 'Common'), (2, 'Uncommon'), (3, 'Rare'), (4, 'Epic'), (5, 'Artifact'), (6, 'Mythic')], default=(1, 'Common'))),
                ('ardor', models.IntegerField(choices=[(5, 'Common'), (10, 'Uncommon'), (15, 'Rare'), (25, 'Epic'), (50, 'Artifact'), (100, 'Mythic')], default=5)),
            ],
        ),
        migrations.CreateModel(
            name='Dice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(default='no description', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, default='no description', max_length=500)),
                ('level', models.IntegerField(default=1)),
                ('slot', models.IntegerField(blank=True, choices=[(1, 'weapon'), (2, 'body'), (3, 'trinket'), (None, 'None')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games_played', models.IntegerField(default=0)),
                ('floors_passed', models.BigIntegerField(default=0)),
                ('monsters_killed', models.BigIntegerField(default=0)),
                ('max_floor_normal', models.IntegerField(default=0)),
                ('max_floor_chaos', models.IntegerField(default=0)),
                ('total_damage_healed', models.IntegerField(default=0)),
                ('total_damage_absorbed', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(default='no description', max_length=500)),
                ('base_health', models.IntegerField(default=1)),
                ('base_defense', models.IntegerField(default=1)),
                ('base_mana', models.IntegerField(default=1)),
                ('avatar', models.CharField(blank=True, max_length=200, null=True)),
                ('role', models.IntegerField(choices=[(1, 'dps'), (2, 'healer'), (3, 'tank')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('experience', models.IntegerField(default=0)),
                ('ardor', models.IntegerField(default=0)),
                ('money', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SoloData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games_played', models.IntegerField(default=0)),
                ('floors_passed', models.BigIntegerField(default=0)),
                ('monsters_killed', models.BigIntegerField(default=0)),
                ('max_floor_normal', models.IntegerField(default=0)),
                ('max_floor_chaos', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_hours_played', models.BigIntegerField(default=0)),
                ('total_ardor_points', models.BigIntegerField(default=0)),
                ('dice_rolled', models.BigIntegerField(default=0)),
                ('group', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.groupdata')),
                ('solo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='database.solodata')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='solodata',
            name='statistics_link',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.statistics'),
        ),
        migrations.CreateModel(
            name='ProfileHasHero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('date_obtained', models.DateField()),
                ('times_played', models.IntegerField(default=0)),
                ('group_played', models.IntegerField(default=0)),
                ('solo_played', models.IntegerField(default=0)),
                ('equipment_body', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='profilehashero_body', to='database.equipment')),
                ('equipment_trinket1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='profilehashero_trinket1', to='database.equipment')),
                ('equipment_trinket2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='profilehashero_trinket2', to='database.equipment')),
                ('equipment_weapon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='profilehashero_weapon', to='database.equipment')),
                ('hero', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.hero')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileHasDice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_obtained', models.DateField()),
                ('times_played', models.IntegerField(default=0)),
                ('times_tolled', models.IntegerField(default=0)),
                ('dice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.dice')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileHasAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_obtained', models.DateField()),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.achievement')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='database.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='achievements',
            field=models.ManyToManyField(through='database.ProfileHasAchievement', to='database.Achievement'),
        ),
        migrations.AddField(
            model_name='profile',
            name='dice',
            field=models.ManyToManyField(through='database.ProfileHasDice', to='database.Dice'),
        ),
        migrations.AddField(
            model_name='profile',
            name='heroes',
            field=models.ManyToManyField(through='database.ProfileHasHero', to='database.Hero'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupdata',
            name='statistics_link',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='database.statistics'),
        ),
    ]
